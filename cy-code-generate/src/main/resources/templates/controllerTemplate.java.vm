package ${package.Controller};


import org.springframework.web.bind.annotation.*;

#if(${restControllerStyle})
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@Api(value = "$!{table.comment}", tags = "$!{table.comment}管理")
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    public ${table.serviceName} i${entity}Service;

    @ApiOperation("新增" )
    @PostMapping()
    @LogStyle(beforeDesc = "新增开始:{0}", afterDesc = "新增结束")
    public R<Response${entity}> create(@RequestBody Req${entity}Add add){

            Response${entity} data = i${entity}Service.add(add);
            return R.data(data);
    }

    @ApiOperation("获取详情" )
    @GetMapping("/detail")
    @LogStyle(beforeDesc = "获取详情开始:{0}", afterDesc = "获取详情结束")
    public R<Response${entity}> retrieveByParams(Req${entity}Query params){

        Response${entity} data = i${entity}Service.findByParams(params);
        return R.data(data);
    }

    @ApiOperation("更新" )
    @PutMapping("/{id}")
    @LogStyle(beforeDesc = "更新开始:{0}", afterDesc = "更新结束")
    public R updateById(@PathVariable String id, @RequestBody Req${entity}Update reqUpdate){

            return R.data(i${entity}Service.modify(id, reqUpdate));
    }

    @ApiOperation("删除" )
    @DeleteMapping("/{id}")
    @LogStyle(beforeDesc = "删除开始:{0}", afterDesc = "删除结束")
    public R<Boolean> deleteById(@PathVariable String id){

        boolean data = i${entity}Service.remove(id);
        return R.data(data);
    }




}

#end